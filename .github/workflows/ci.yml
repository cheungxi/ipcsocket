name: CI
on: [pull_request, push]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            java: 8
            jobtype: 1
          - os: macos-latest
            java: 8
            jobtype: 1
          - os: windows-latest
            java: 8
            jobtype: 1
    runs-on: ${{ matrix.os }}
    env:
      JAVA_OPTS: -Xms800M -Xmx2G -Xss6M -XX:ReservedCodeCacheSize=128M -server -Dsbt.io.virtual=false -Dfile.encoding=UTF-8
      JVM_OPTS: -Xms800M -Xmx2G -Xss6M -XX:ReservedCodeCacheSize=128M -server -Dsbt.io.virtual=false -Dfile.encoding=UTF-8
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "${{ matrix.java }}"
          cache: sbt
      - name: Set up MinGW
        if: ${{ matrix.os != 'macos-latest' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
      - name: Set up gcc-aarch64-linux-gnu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: sudo apt-get -y install gcc-aarch64-linux-gnu
      - name: Build and test (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          sbt "jvmfmtCheckAll; clangfmtCheck; buildNativeArtifacts; test"
      - name: Build and test (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash
        run: sbt "buildNativeArtifacts; test"
      - name: Build and test (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: sbt "buildNativeArtifacts; test"
      - name: Archive native artifacts (Linux)
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ runner.os }}
          path: |
            src/main/resources/linux/x86_64/libsbtipcsocket.so
            src/main/resources/linux/aarch64/libsbtipcsocket.so
            src/main/resources/win32/x86_64/sbtipcsocket.dll
      - name: Archive native artifacts (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ runner.os }}
          path: src/main/resources/darwin/x86_64/libsbtipcsocket.dylib
      - name: Test examples compilation
        shell: bash
        run: |
          cd examples/echo-server
          mvn package
